apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    batch.kubernetes.io/job-tracking: ""
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"batch/v1","kind":"Job","metadata":{"annotations":{},"name":"init-database-job","namespace":"todo-app"},"spec":{"template":{"spec":{"containers":[{"command":["/bin/sh","-c","until psql -h postgres-service -U $POSTGRES_USER -d $POSTGRES_DB -c \"SELECT 1\"; do\n  echo \"Waiting for PostgreSQL to be ready...\"\n  sleep 2\ndone\npsql -h postgres-service -U $POSTGRES_USER -d $POSTGRES_DB -c \"CREATE DATABASE $POSTGRES_DB;\"\npsql -h postgres-service -U $POSTGRES_USER -d $POSTGRES_DB -c \"CREATE TABLE IF NOT EXISTS $POSTGRES_TABLE (id SERIAL PRIMARY KEY, tasks VARCHAR(255), status VARCHAR(255));\"\npsql -h postgres-service -U $POSTGRES_USER -d $POSTGRES_DB -c \"CREATE USER $POSTGRES_USER WITH ENCRYPTED PASSWORD '$POSTGRES_PASSWORD';\"\npsql -h postgres-service -U $POSTGRES_USER -d $POSTGRES_DB -c \"GRANT ALL PRIVILEGES ON DATABASE $POSTGRES_DB TO '$POSTGRES_USER';\"\npsql -h postgres-service -U $POSTGRES_USER -d $POSTGRES_DB -c \"ALTER USER $POSTGRES_USER WITH PASSWORD 9vnKD7jT7Y;\"\npsql -h postgres-service -U $POSTGRES_USER -d $POSTGRES_DB -c \"SELECT pg_reload_conf();\"\n"],"env":[{"name":"POSTGRES_DB","valueFrom":{"configMapKeyRef":{"key":"POSTGRES_USER","name":"postgres-config"}}},{"name":"POSTGRES_USER","valueFrom":{"configMapKeyRef":{"key":"POSTGRES_DEFAULT_USER","name":"postgres-config"}}},{"name":"POSTGRES_PASSWORD","value":"POSTGRES_PASSWORD"},{"name":"POSTGRES_DB","valueFrom":{"configMapKeyRef":{"key":"POSTGRES_DB","name":"postgres-config"}}},{"name":"POSTGRES_TABLE","valueFrom":{"configMapKeyRef":{"key":"POSTGRES_TABLE","name":"postgres-config"}}}],"image":"postgres:latest","name":"init-database"}],"restartPolicy":"Never"}}}}
  creationTimestamp: "2023-10-15T01:27:51Z"
  generation: 1
  labels:
    controller-uid: af6de416-de2d-4485-9ff4-218828dd1ca6
    job-name: init-database-job
  name: init-database-job
  namespace: todo-app
  resourceVersion: "59138577"
  uid: af6de416-de2d-4485-9ff4-218828dd1ca6
spec:
  backoffLimit: 6
  completionMode: NonIndexed
  completions: 1
  parallelism: 1
  selector:
    matchLabels:
      controller-uid: af6de416-de2d-4485-9ff4-218828dd1ca6
  suspend: false
  template:
    metadata:
      creationTimestamp: null
      labels:
        controller-uid: af6de416-de2d-4485-9ff4-218828dd1ca6
        job-name: init-database-job
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - |
          until psql -h postgres-service -U $POSTGRES_USER -d $POSTGRES_DB -c "SELECT 1"; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done
          psql -h postgres-service -U $POSTGRES_DEFAULT_USER -d $POSTGRES_DB -c "CREATE DATABASE $POSTGRES_DB;"
          psql -h postgres-service -U $POSTGRES_DEFAULT_USER -d $POSTGRES_DB -c "CREATE TABLE IF NOT EXISTS $POSTGRES_TABLE (id SERIAL PRIMARY KEY, tasks VARCHAR(255), status VARCHAR(255));"
          psql -h postgres-service -U $POSTGRES_DEFAULT_USER -d $POSTGRES_DB -c "CREATE USER $POSTGRES_USER WITH ENCRYPTED PASSWORD '$POSTGRES_PASSWORD';"
          psql -h postgres-service -U $POSTGRES_DEFAULT_USER -d $POSTGRES_DB -c "GRANT ALL PRIVILEGES ON DATABASE $POSTGRES_DB TO '$POSTGRES_USER';"
          psql -h postgres-service -U $POSTGRES_DEFAULT_USER -d $POSTGRES_DB -c "ALTER USER $POSTGRES_USER WITH PASSWORD '$POSTGRES_PASSWORD';"
        env:
        - name: POSTGRES_DEFAULT_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DEFAULT_USER
              name: postgres-config
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: postgres-config
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: postgres-config
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: postgres-config
        - name: POSTGRES_TABLE
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_TABLE
              name: postgres-config
        image: postgres:latest
        imagePullPolicy: Always
        name: init-database
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  active: 1
  ready: 1
  startTime: "2023-10-15T01:27:51Z"
  uncountedTerminatedPods: {}
